using QBits.Intuition.Mathematics.Primes;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace EulerProblems.Problems.Problems10to19
{
    /// <summary/>
    [ProblemSolver("Highly divisible triangular number", displayName = "Problem 12", problemDefinition =
@"The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?")]
    public class EulerProblem12 : AbstractEulerProblem
    {
        protected override void Solve(out string answer)
        {
            long currentTriangle = 0;
            long currentNaturalNumber = 0;
            int divisors = 0;
            PrimeSolver primeSolver = new PrimeSolver();

            while (divisors < 501)
            {
                currentNaturalNumber++;
                currentTriangle += currentNaturalNumber;
                divisors = primeSolver.CalculateDivisors(currentTriangle);
            }
            answer = string.Format("Sequence: {0}, Triangle number: {1}, Divisors: {2}", currentNaturalNumber, currentTriangle, divisors);
        }
    }
}
